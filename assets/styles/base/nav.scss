// It's probably best to leave this section alone and add your own overrides afterwards.

.navbar-sticky-top {
  top: 0;

  &:before,
  &:after {
    content: '';
    display: table;
  }
}

// Override classes for responsive menu
.navbar-wrapper {
  @include media-breakpoint-up(sm) {
    .menu-center & { // Flexbox based centered menu.
      display: flex !important;
      justify-content: center;

      .nav {
        &.navbar-nav {
          display: flex;
        }
      }
    }
  }

  @include media-breakpoint-down(xs) {
    clear: both;

    .navbar-nav {
      width: 100%;

      .nav-item {
        float: none;

        & + .nav-item {
          margin-left: 0;
        }
      }

      .nav-link {
        text-align: center;
      }
    }
  }

  .dropdown-menu {
    @include media-breakpoint-down(xs) {
      float: none;
      position: relative;
    }

    padding: 0;
  }
}

.navbar {
  background-color: $gray-lightest;
  padding: 0;
  min-height: 2.5rem;
  width: 100%;
}

.navbar-brand {
  margin-left: 1rem;
}

.dropdown-header {
  h6 {
    padding-top:    .425rem;
    padding-bottom: .425rem;
    margin-bottom: 0;
  }
}

// Helper class to center unknown width ul nav bar
.menu-center {
  .navbar-brand {
    position: absolute;
  }
}

@include media-breakpoint-up(sm) {
  .menu-right {
    .navbar-nav {
      float: right;
      padding-right: 5px;
    }

    .dropdown-menu {
      @extend .dropdown-menu-right;
    }
  }
}

.navbar-toggler {
  float: right;
  padding: .5rem;
  display: block;
  position: relative;;
  top: 3px;
  right: .25rem;
  width: $bar-width * 2;

  &:focus {
    outline: 0;
  }

  .bar-wrapper {
    width: $bar-width;
    height: ($bar-height * 3 + $bar-spacing * 2);
  }

  .bar {
    transition: top 250ms ease, transform 250ms ease 250ms, opacity 100ms ease 250ms;
    display: block;
    background: $color;
    width: $bar-width;
    height: $bar-height;
    position: relative;
    transform: translate3d(0, 0, 0);

    &:nth-child(1) {
      top: $bar-spacing + $bar-height;
      transform: rotate(45deg);
    }

    &:nth-child(2) {
      top: $bar-spacing;
      opacity: 0;
    }

    &:nth-child(3) {
      top: 0;
      transform: rotate(-45deg);
    }
  }

  &.collapsed {
    .bar {
      transition: transform 250ms ease, top 250ms ease 250ms, opacity 100ms ease 250ms;

      &:nth-child(1) {
        top: 0;
        transform: rotate(0);
      }

      &:nth-child(2) {
        top: $bar-spacing;
        opacity: 1;
      }

      &:nth-child(3) {
        top: $bar-spacing * 2;
        transform: rotate(0);
      }
    }
  }
}
